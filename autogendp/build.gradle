apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.setup.compileSdk
    buildToolsVersion rootProject.setup.buildTools

    defaultConfig {
        minSdkVersion rootProject.setup.minSdk
        targetSdkVersion rootProject.setup.targetSdk
        versionCode rootProject.versions.code
        versionName rootProject.versions.name
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

//定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
//main是入口类的完整类名，可运行的jar必须有带main函数的入口类
def makeJar(String target, String main, String classDir) {
    exec {
        executable "jar"   //调用jar
        args "cvfe", target, main
        args "-C", classDir
        args "", "."


    }
}

//新建一个task,名为buildLib,依赖build(build是一个自带的task)
task buildLib(dependsOn: ['build']) << {
    makeJar("autoGenDp.jar", "yomii.autogendp.MainDimenSax", "build/intermediates/classes/release")


}
